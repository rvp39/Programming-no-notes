#######################################################
# Blue print for crud operation usng node and mongodb #
#######################################################
--------------------------------------------------------------------------------------
 @ install mongoose(in console)                                                       
     $npm install mongoose //install mongoose                                                           
 -------------------------------------------------------------------------------------
 @ initaialize and configure mongoose (in node js file)                               
     # var mongoose = require("mongoose");                                            
     # mongoose.connect("mongodb://localhost/<db_name>");                             
--------------------------------------------------------------------------------------
 @ set up a data schema and a model (add the scema to an entity)(in node js file)     
     # var _schema = new.mongoose.Schema({                                            
         key_1: type,                                                                 
         key_2: Type,....                                                             
         });                                                                          
    # var <model> = mongoose.model("<model(sigular ver of the model)>",Schema);       
--------------------------------------------------------------------------------------
 @ to create any entity pass a js object with the schema in mind(in node js file)     
     # <model>.create({schema object});//data = req.body.[model name]                 
     # <model>.find({},(err,coll)=>{ // collection is plural of model cat -> cats     
        res.render("index",{<model>:<model>}//passing in data to index.ejs);          
    })                                                                                
--------------------------------------------------------------------------------------
 @ to loop through all the db entry and display in index (in ejs file)                 
     # <% <collection.forEach((<model>)=>{ %>                                         
         <div>                                                                        
            <%= model.key1 %>                                                         
            ...                                                                       
         </div>                                                                        
      <% }) %>                                                                        
--------------------------------------------------------------------------------------
 @ for creating the object using form (in ejs)                                        
     #<form action="/index" method="post">                                            
     #    <input type="text" name="<model_h[key1]>" >                                 
     #    <input type="text" name="<model_h[key2]>" >                                 
     #</form>                                                                         
   @to take the data fro form and put into db (in node js file)                       
     #model.create(req.body.model_h,(err,new)=>{///keys in model_h should match schema
         if !err{                                                                     
             res.redirect("/index);                                                   
         }                                                                            
     });                                                                              
--------------------------------------------------------------------------------------
 @ for show route (in node js file)                                                   
     # app.get('/index/:id,(req,res)=>{                                                
         model.findById(req.params.id,(err,found data)=>{                              
             res.render(show,{model:found data});                                     
         });                                                                          
     });                                                                               
 @ in inex ejs                                                                         
     #<a href="/index/<%= model._id%>">go to</a>                                       
--------------------------------------------------------------------------------------+
   @update  //HTML doent supprort put req and to over come this method overrride is used 
        $npm install method-override --save                                                
   @in nodejs file                                                                                   
          #const methodOverride=require("method-override");
          #app.use(methodOverride("_method"));
    @in nodejs file
        #app.get("/index/:id/edit",(req,res,foundmodel)=>{
            res.render edit form,{model=foundmodel};
        });
    @in ejs file
           #<form action="/index/<%=model._id%>?_method=PUT" method="PUT">                                            |
           #   <input type="text" name="<model_h[key1]>" value="<%=model.key1">                                 
           #   <input type="text" name="<model_h[key2]>" value="<%=model.key2">                                 
           #</form>                   
    @in node file
        #app.put("/index/:id",(re,res)=>{
           model.findByIdAndUpdate(req.params.id,req.body.model_h,(err,updatedModel)=>{
               res.redirect("/index/"+req.params.id);
           })
        });
---------------------------------------------------------------------------------------------
 @in node js file
    #app.delete("/index/:id",(req,res)=>{
        model.findByIdAndRemove(req.params.id,(err)=>{
            res.redirect("/index);
        })
    })
 @ in show file
        #<form action="/index/<%=model._id%>?_method=DELETE" method="PUT">                                            |
           #button=delete                              
        #</form>   

---------------------------------------------------------------------------------------------